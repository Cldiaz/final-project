{"version":3,"sources":["routes/tickets.ts"],"names":[],"mappings":"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","file":"routes/tickets.js","sourcesContent":["import express = require('express');\r\nvar router = express.Router();\r\n\r\n//db references\r\nimport mongoose = require('mongoose');\r\n\r\nimport ticketModel = require('../models/ticket');\r\n\r\nimport Ticket = ticketModel.Ticket;\r\n\r\n//utility function to check if user is authenticated\r\nfunction requireAuth(req: express.Request, res: express.Response, next: any){\r\n    //check if user is log in\r\n    if(!req.isAuthenticated()){\r\n        return res.redirect('/login');\r\n    }\r\n    next();\r\n}\r\n//get tickets page\r\nrouter.get('/', requireAuth,(req:express.Request, res:express.Response, next: any) =>{\r\n    var typeUser = req.user ? req.user.type : '';\r\n    if( typeUser == 'Admin'){\r\n        //use the Ticket model to query the Tickets collection\r\n        Ticket.find(function(error, tickets){\r\n            if(error){\r\n                console.log(error);\r\n                res.end(error);\r\n            }\r\n            else {\r\n                //no error, list of tickets\r\n                res.render('tickets/index',{\r\n                    title: 'Tickets',\r\n                    tickets : tickets,\r\n                    typeU: typeUser,\r\n                    displayName: req.user ? req.user.displayName : ''\r\n                });\r\n            }\r\n        });      \r\n    }\r\n    else{\r\n        res.redirect('/users');\r\n    }\r\n});\r\n\r\n// get add page\r\nrouter.get('/add', requireAuth,(req: express.Request, res: express.Response, next: any)=> {\r\n    res.render('tickets/add', {\r\n        title: 'Create New Ticket',\r\n        displayName: req.user ? req.user.displayName : ''\r\n    });\r\n});\r\n\r\n// POST add page - save the new ticket\r\nrouter.post('/add', requireAuth, (req: express.Request, res: express.Response, next: any) => { \r\n    Ticket.create({     \r\n        ticketTitle: req.body.ticketTitle,\r\n        ticketDescription: req.body.ticketDescription,\r\n        ticketPriority: req.body.ticketPriority,       \r\n        customerName: req.body.customerName,\r\n        customerPhone: req.body.customerPhone,\r\n        incidentNarrative : \r\n            {comment : 'Ticket submitted'}        \r\n    }, function(error, Ticket) {\r\n        // did we get back an error or valid Ticket object?\r\n        if (error) {\r\n            console.log(error);\r\n            res.end(error);\r\n        }\r\n        else {\r\n            res.redirect('/tickets');\r\n        }\r\n    })\r\n});\r\n// GET edit page - show the current ticket in the form\r\nrouter.get('/:id', requireAuth, (req: express.Request, res: express.Response, next: any) => {\r\n    var id = req.params.id;\r\n    Ticket.findById(id, (error, Ticket) => {\r\n        if (error) {\r\n            console.log(error);\r\n            res.end(error);\r\n        }\r\n        else {\r\n            //show the edit view\r\n            res.render('tickets/edit', {\r\n                title: 'Ticket Details',\r\n                ticket: Ticket,\r\n                displayName: req.user ? req.user.displayName : ''\r\n            });\r\n        }\r\n    });\r\n});\r\n// POST edit page - update the selected ticket\r\nrouter.post('/:id', requireAuth,(req: express.Request, res: express.Response, next: any) => {\r\n    // grab the id from the url parameter\r\n    var id = req.params.id;\r\n    // create and populate a ticket object\r\n    var ticket = new Ticket({\r\n        _id: id,\r\n        ticketTitle: req.body.ticketTitle,\r\n        ticketDescription: req.body.ticketDescription,\r\n        ticketPriority: req.body.ticketPriority,\r\n        customerName: req.body.customerName,\r\n        customerPhone: req.body.customerPhone,\r\n        ticketStatus: req.body.ticketStatus,\r\n        incidentNarrative : [{\r\n            comment: req.body.comment\r\n        }],\r\n    });\r\n    var incidentComment = req.body.comment;\r\n    var incidentStatus = req.body.ticketStatus;\r\n    // run the update using mongoose and our model\r\n    Ticket.update({ _id: id }, {$push: {incidentNarrative:{comment : incidentComment, ticketStatus :incidentStatus}}}, (error) => {\r\n        if (error) {\r\n            console.log(error);\r\n            res.end(error);\r\n        }\r\n        else {\r\n            //if success update\r\n            res.redirect('/tickets');\r\n        }\r\n    });\r\n});\r\n// make this public\r\nmodule.exports = router;"],"sourceRoot":"/source/"}