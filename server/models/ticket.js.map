{"version":3,"sources":["models/ticket.ts"],"names":[],"mappings":";AAAA,IAAO,QAAQ,WAAW,UAAU,CAAC,CAAC;AAEtC,uBAAuB;AACvB,IAAI,YAAY,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC;IACnC,SAAS,EAAE;QACP,IAAI,EAAE,IAAI;QACV,OAAO,EAAE,IAAI,CAAC,GAAG;KACpB;IACD,SAAS,EAAC;QACN,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,EAAE;QACX,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,wBAAwB;KACrC;IACD,YAAY,EAAE;QACV,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,IAAI,CAAC,GAAG;KACpB;IACD,WAAW,EAAE;QACT,IAAI,EAAG,MAAM;QACb,OAAO,EAAE,EAAE;QACX,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,0BAA0B;KACvC;IACD,iBAAiB,EAAE;QACf,IAAI,EAAG,MAAM;QACb,OAAO,EAAE,EAAE;QACX,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,gCAAgC;KAC7C;IACD,aAAa,EAAC;QACV,IAAI,EAAE,MAAM;QACZ,IAAI,EAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,CAAC;QAChC,OAAO,EAAG,KAAK;QACf,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,4BAA4B;KACzC;IACD,YAAY,EAAG;QACX,IAAI,EAAE,MAAM;QACZ,IAAI,EAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,CAAC;QAChC,OAAO,EAAG,KAAK;QACf,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,2BAA2B;KACxC;IACD,cAAc,EAAE;QACZ,IAAI,EAAE,MAAM;QACZ,IAAI,EAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACtB,OAAO,EAAG,CAAC;QACX,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,6BAA6B;KAC1C;IACD,YAAY,EAAE;QACV,IAAI,EAAG,MAAM;QACb,OAAO,EAAE,EAAE;QACX,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,2BAA2B;KACxC;IACD,aAAa,EAAE;QACX,IAAI,EAAG,MAAM;QACb,OAAO,EAAE,EAAE;QACX,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,4BAA4B;KACzC;IACD,iBAAiB,EAAG,CAAC;YACjB,WAAW,EAAG;gBACV,IAAI,EAAE,IAAI;gBACV,OAAO,EAAE,IAAI,CAAC,GAAG;aAChB;YACL,OAAO,EAAE,MAAM;YACf,YAAY,EAAG;gBACX,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAG,CAAC,KAAK,EAAE,WAAW,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,CAAC;gBAC7D,OAAO,EAAG,KAAK;gBACf,IAAI,EAAE,IAAI;gBACV,QAAQ,EAAE,2BAA2B;aACxC;SACJ,CAAC;CACL,CAAC,CAAC;AAEQ,cAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC","file":"models/ticket.js","sourcesContent":["import mongoose = require('mongoose');\r\n\r\n// Define object schema\r\nvar ticketSchema = new mongoose.Schema({\r\n    createdOn: {\r\n        type: Date,\r\n        default: Date.now\r\n    },\r\n    createdBy:{\r\n        type: String,\r\n        default: '',\r\n        trim: true,\r\n        required: 'Created by is required'     \r\n    },\r\n    ticketNumber: {\r\n        type: String,\r\n        default: Date.now  \r\n    },\r\n    ticketTitle: {\r\n        type : String,\r\n        default: '',\r\n        trim: true,\r\n        required: 'Ticket Title is required'\r\n    },\r\n    ticketDescription: {\r\n        type : String,\r\n        default: '',\r\n        trim: true,\r\n        required: 'Ticket Description is required'\r\n    },\r\n    ticketUrgency:{\r\n        type: String,\r\n        enum : ['HIGH', 'MEDIUM', 'LOW'],\r\n        default : 'LOW',\r\n        trim: true,\r\n        required: 'Ticket Urgency is required'\r\n    },\r\n    ticketImpact : {\r\n        type: String,\r\n        enum : ['HIGH', 'MEDIUM', 'LOW'],\r\n        default : 'LOW',\r\n        trim: true,\r\n        required: 'Ticket Impact is required'\r\n    },\r\n    ticketPriority: {\r\n        type: Number,\r\n        enum : [1, 2, 3, 4, 5],\r\n        default : 5,\r\n        trim: true,\r\n        required: 'Ticket Priority is required'\r\n    },\r\n    customerName: {\r\n        type : String,\r\n        default: '',\r\n        trim: true,\r\n        required: 'Customer Name is required'\r\n    },\r\n    customerPhone: {\r\n        type : String,\r\n        default: '',\r\n        trim: true,\r\n        required: 'Customer Phone is required'\r\n    },\r\n    incidentNarrative : [{\r\n        commentDate : {\r\n            type: Date,\r\n            default: Date.now\r\n            },\r\n        comment: String,\r\n        ticketStatus : {\r\n            type: String,\r\n            enum : ['New', 'Picked Up', 'Assigned', 'Resolved', 'Closed'],\r\n            default : 'New',\r\n            trim: true,\r\n            required: 'Ticket Status is required'\r\n        }\r\n    }]\r\n});\r\n\r\nexport var Ticket = mongoose.model('Ticket', ticketSchema);"],"sourceRoot":"/source/"}